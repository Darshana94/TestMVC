@model Test.Models.user

@{
    ViewBag.Title = "Register";
    Layout = "~/Views/Shared/_Start.cshtml";
}

<div class="register-box">
    <div class="register-logo">
        <b>ERP</b>
    </div>
    <div class="register-box-body">
        <p class="register-box-msg">Sign in to start your session</p>
        @using (Html.BeginForm())
            {
            @Html.AntiForgeryToken()
           
            <form>
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @if (ViewBag.Message != null)
                {
                    <div class="form-group">
                        @ViewBag.Message
                    </div>
                } 
                <div class="form-group has-feedback">

                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control",@placeholder = "Firstname" } })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                    <span class="glyphicon glyphicon-user form-control-feedback"></span>
                </div>
                <div class="form-group has-feedback">

                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control",@placeholder = "Address" } })
                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                    <span class="glyphicon glyphicon-user form-control-feedback"></span>
                </div>
                <div class="form-group has-feedback">

                    @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control", @placeholder = "Username" } })
                    @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                    <span class="glyphicon glyphicon-lock form-control-feedback"></span>

                </div>
                <div class="form-group has-feedback">

                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @placeholder = "Password" } })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    <span class="glyphicon glyphicon-lock form-control-feedback"></span>

                </div>
                <div class="form-group has-feedback">

                    @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", @placeholder = "ConfirmPassword" } })
                    @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                    <span class="glyphicon glyphicon-lock form-control-feedback"></span>

                </div>
                <div class="row">
                    <div class="col-xs-8">
                        @Html.ActionLink("Back to Login", "Login")
                    </div>
                    <!-- /.col -->
                    <div class="col-xs-4">
                        <button type="submit" class="btn btn-primary btn-block btn-flat">Register</button>
                    </div>
                    <!-- /.col -->
                </div>
        </form>

        }
    </div>
</div>

@Scripts.Render("~/bundles/jqueryval")


